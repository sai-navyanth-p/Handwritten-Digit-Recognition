# -*- coding: utf-8 -*-
"""Digit_Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KWIz8ilqoz9B4DiBGdoFDkb8LFP_amvc
"""

!pip install tensorflow
!pip install keras
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import keras
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.datasets import mnist
from keras.utils import to_categorical

(X_train, Y_train),(X_test, Y_test) = mnist.load_data() #loading mnist data

print(X_train.shape)
print(X_test.shape)

X_train[0] # to see a data element in X

Y_train[0]

#to print image as a picture
plt.imshow(X_train[0])

#reshape the data to fit the model
X_train= X_train.reshape(60000,28,28,1)
X_test= X_test.reshape(10000,28,28,1)
X_train=X_train/255
X_test=X_test/255

#one hot encoding
Y_train_one_hot = to_categorical(Y_train)
Y_test_one_hot = to_categorical(Y_test)
#print the new label
print(Y_train_one_hot[0])

classifier= Sequential()
#add convolutional layers
classifier.add(Convolution2D(64,(3,3), input_shape=(28,28,1), activation='relu',))
#classifier.add(Convolution2D(32,(3,3), activation='relu'))
classifier.add(MaxPooling2D(pool_size=(2,2)))
classifier.add(Dropout(0.30))
classifier.add(Convolution2D(128,(3,3), activation='relu',))
#classifier.add(Convolution2D(64,(3,3), activation='relu'))
classifier.add(MaxPooling2D(pool_size=(2,2)))
classifier.add(Dropout(0.25))

classifier.add(Flatten())
classifier.add(Dense(512 , activation='relu'))
classifier.add(Dense(128 , activation='relu'))
from keras.layers import Dropout
classifier.add(Dropout(0.20))#power of dropout**
classifier.add(Dense(10 , activation='softmax'))
classifier.compile(optimizer='adam',loss='categorical_crossentropy', metrics=['accuracy'])

#train model #batch_size************* epochs**********
classifier.fit(X_train, Y_train_one_hot, validation_data =(X_test,Y_test_one_hot), epochs=20)

